As an AI language model, I cannot directly implement code in your project, but I can help to guide you through the process. Here's a breakdown of the steps you can follow to implement Firebase Cloud Messaging (FCM) in your React Native app:

1. Set up a Firebase project:
- Sign in to Firebase Console (https://console.firebase.google.com/),
- Click "Add project" and follow the prompts to create a new Firebase project.

2. Install necessary dependencies:
In your React Native project, run these commands to install required packages:
```bash
npm install @react-native-firebase/app --save
npm install @react-native-firebase/messaging --save
```

3. Link the React Native Firebase Messaging package:
Type the following command and follow the prompts:
```bash
npx react-native link @react-native-firebase/messaging
```

4. Configure Firebase for Android project:
- Go to the Firebase Console, open your project, then click the Android icon to add your Android app.
- Fill in your app's package name and register your app.
- Download the `google-services.json` file and place it in your `android/app` folder.
- Add the following code to your `project/android/build.gradle` file:
```groovy
buildscript {
  dependencies {
    // ...
    classpath 'com.google.gms:google-services:4.3.8' // Add this line
  }
}
```
- Add the following code to your `project/android/app/build.gradle` file:
```groovy
apply plugin: 'com.android.application'
apply plugin: 'com.google.gms.google-services' // Add this line

dependencies {
  // ...
  implementation platform('com.google.firebase:firebase-bom:28.4.2') // Add this line
  implementation 'com.google.firebase:firebase-analytics' // Add this line
}
```

5. Configure Firebase for iOS project:
- Go to the Firebase Console, open your project, then click the iOS icon to add your iOS app.
- Fill in your app's bundle ID and register your app.
- Download the `GoogleService-Info.plist` file and place it in the `ios/` folder of your project.
- In Xcode, right-click on the `Info.plist` file and choose 'Add files to [your project]', then select the `GoogleService-Info.plist` file.
- Install the required pods by running this command in the `ios/` folder:
```bash
pod install --repo-update
```

6. Request notification permissions:
In your `App.js` or another appropriate file, import messaging from `@react-native-firebase/messaging` and request permission to display notifications:
```javascript
import messaging from '@react-native-firebase/messaging';

async function requestUserPermission() {
  const authStatus = await messaging().requestPermission();
  const enabled =
    authStatus === messaging.AuthorizationStatus.AUTHORIZED ||
    authStatus === messaging.AuthorizationStatus.PROVISIONAL;

  if (enabled) {
    console.log('Authorization status:', authStatus);
  }
}

// Call this function when your app loads
requestUserPermission();
```

7. Set up the message handler:
- In the same file, you can use the following code to handle messages when the app is in the foreground:
```javascript
import { useEffect } from 'react';

useEffect(() => {
  const unsubscribe = messaging().onMessage(async remoteMessage => {
    console.log('A new FCM message arrived!', JSON.stringify(remoteMessage));
  });

  return unsubscribe;
}, []);
```

8. Test your implementation by sending push notifications from your Firebase console.

This process should help you implement Firebase Cloud Messaging in your React Native app for notifications. If you run into any issues, please provide more details and I'd be happy to assist you further.